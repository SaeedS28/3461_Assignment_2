import java.util.ArrayList;


public class Course extends GeneralCourse
{
	private String courseTerm;
	private String courseDesc;
	private String courseInstructor;
	private CourseSchedule courseSchedule;
	private ArrayList<CourseActivity> courseActivity;
	private ArrayList<GeneralCourse> prereq;
	
	
	
	public Course(String courseName, int courseCredits, String courseTerm, String courseDesc, String courseInstructor, CourseSchedule courseSchedule, ArrayList<CourseActivity> courseActivity, ArrayList<GeneralCourse> prereq)
	{
		super(courseName, courseCredits);
		this.setCourseTerm(courseTerm);
		this.setCourseDesc(courseDesc);
		this.setCourseInstructor(courseInstructor);
		this.setCourseSchedule(courseSchedule);
		this.setCourseActivity(courseActivity);
		this.setPrereq(prereq);
	}
	
	public String getCourseTerm()
	{
		return this.courseTerm;
	}
	
	public void setCourseTerm(String courseTerm)
	{
		this.courseTerm = courseTerm;
	}
	
	public String getCourseDesc()
	{
		return this.courseDesc;
	}
	
	public void setCourseDesc(String courseDesc)
	{
		this.courseDesc = courseDesc;
	}
	
	
	public String getCourseInstructor()
	{
		return this.courseInstructor;
	}
	
	public void setCourseInstructor(String courseInstructor)
	{
		this.courseInstructor = courseInstructor;
	}
	
	public CourseSchedule getCourseSchedule()
	{
		return this.courseSchedule;
	}
	
	public void setCourseSchedule(CourseSchedule courseSchedule)
	{
		this.courseSchedule = courseSchedule;
	}
	
	public ArrayList<CourseActivity> getCourseActivity()
	{
		return this.courseActivity;
	}
	
	public void setCourseActivity(ArrayList<CourseActivity> courseActivity)
	{
		this.courseActivity = courseActivity;
	}
	
	public ArrayList<GeneralCourse> getPrereq()
	{
		return this.prereq;
	}
	
	public void setPrereq(ArrayList<GeneralCourse> prereq)
	{
		this.prereq = prereq;
	}
	
	private static ArrayList<Course> generateComSciCourses()
	{
		ArrayList<CourseActivity> introCompSciAct = new ArrayList<CourseActivity>();
		CourseLab introCompSciLab = new CourseLab("Yon Koren", "W", "10:00 - 11:30"); 
		introCompSciAct.add(introCompSciLab);
		
		//EECS 1012
		Course introCompSci = new Course("EECS 1012: Introduction to Computer Science 1", 3, "F Term", 
				"Students with no knowledge will familiarize themselves with the concepts through web programming.", "Melanie Baljko", 
				new CourseSchedule("CLH L", "M", "18:00 - 20:00"), introCompSciAct, null);
		
		//EECS 1022
		
		ArrayList<CourseActivity> introToCompSciTwoAct = new ArrayList<CourseActivity>();
		CourseLab introToCompSciTwoLab = new CourseLab("Lind Thill", "T", "2:30 - 4:00");
		
		introToCompSciTwoAct.add(introToCompSciTwoLab);
		
		
		ArrayList<GeneralCourse> introToCompSciTwoCoursePre = new ArrayList<GeneralCourse>();
		intoToCompSciTwoCoursePre
		

		Course introCompSciTwo = new Course("EECS 1022: Introduction to Computer Science 2", 3, "W Term", 
				"Students will further their knowledge through web programming.", "Melanie Baljko", 
				new CourseSchedule("CLH L", "M", "18:00 - 20:00"), introToCompSciTwoAct, null);
		
		//EECS 1001
		//Course
		
		
		/*
		cSci.getDegreeCourses().add(new GeneralCourse("EECS 1001: Research in Computer Science", 1));
		cSci.getDegreeCourses().add(new GeneralCourse("EECS 1012: Introduction to Computer Science 1", 3));
		cSci.getDegreeCourses().add(new GeneralCourse("EECS 1022: Introduction to Computer Science 2", 3));
		cSci.getDegreeCourses().add(new GeneralCourse("EECS 1019: Discrete Mathematics", 3));
	
		cSci.getDegreeCourses().add(new GeneralCourse("EECS 2030: Java", 3));
		cSci.getDegreeCourses().add(new GeneralCourse("EECS 2011: Data Structures", 3));
		cSci.getDegreeCourses().add(new GeneralCourse("EECS 2021: Computer Organization", 3));
		cSci.getDegreeCourses().add(new GeneralCourse("EECS 2031: Software Tools", 3));
		cSci.getDegreeCourses().add(new GeneralCourse("EECS 2001: Theory of Computation", 3));
		
		cSci.getDegreeCourses().add(new GeneralCourse("EECS 3000: Ethics in Computer Science", 3));
		cSci.getDegreeCourses().add(new GeneralCourse("EECS 3311: Software Design", 3));
		cSci.getDegreeCourses().add(new GeneralCourse("EECS 3101: Algorithm Anaysis", 3));
		cSci.getDegreeCourses().add(new GeneralCourse("EECS 3221: Operating Systems", 3));
		cSci.getDegreeCourses().add(new GeneralCourse("EECS 3421: Introduction to Database Systems", 3));
		cSci.getDegreeCourses().add(new GeneralCourse("EECS 3461: User Interfaces", 3));
			
		cSci.getDegreeCourses().add(new GeneralCourse("MATH 1013: Applied Calculus 1", 3));
		cSci.getDegreeCourses().add(new GeneralCourse("MATH 1014: Applied Calculus 2", 3));
		cSci.getDegreeCourses().add(new GeneralCourse("MATH 1090: Introduction to Logic", 3));
		cSci.getDegreeCourses().add(new GeneralCourse("MATH 2030: Elementary Probability", 3));
		*/
	}
	
	
}